pipeline {
    agent any

    environment {
        FULL_DOCKER_IMAGE_NAME = 'docker-repository.codemart.ro/tvb-build'
        LATEST_TAG = 'latest'
    }

    stages {
        stage ('Build docker image') {
            steps {
                script {
                    def dockerImage = docker.build("${FULL_DOCKER_IMAGE_NAME}:${env.BUILD_ID}", 'tvb_build/docker')
                    dockerImage.push()
                    dockerImage.push('${LATEST_TAG}')
                }
            }
        }
        stage ('Build TVB documentation') {
            agent {
                docker {
                    image '${FULL_DOCKER_IMAGE_NAME}:${LATEST_TAG}'
                }
            }
            steps {
                sh '''#!/bin/bash
                    source activate tvb-docs
                    cd tvb_build
                    sh install_full_tvb.sh
                    python build_step1.py
                '''
                archiveArtifacts artifacts: 'tvb_build/build/*.zip'
            }
        }
        stage ('Run tests') {
            agent {
                docker {
                    image '${FULL_DOCKER_IMAGE_NAME}:${LATEST_TAG}'
                }
            }
            steps {
                sh '''#!/bin/bash
                    source activate tvb-run
                    cd tvb_build
                    sh install_full_tvb.sh
                    service postgresql start
                    cd ../tvb_bin
                    bash run_tests.sh postgres
                '''
                junit 'tvb_bin/TEST_OUTPUT/TEST-*RESULTS.xml'
            }
        }
        stage ('Build for Pypi') {
            agent {
                docker {
                    image '${FULL_DOCKER_IMAGE_NAME}:${LATEST_TAG}'
                }
            }
            steps {
                sh 'rm -R -f tvb_build/build/TVB_Distribution'
                sh '''#!/bin/bash
                    rm -rf dist
                    source activate tvb-run
                    cd tvb_build
                    sh package_for_pip.sh
                '''
                archiveArtifacts artifacts: 'dist/*'
            }
        }
    }
    post {
        changed {
            mail to: 'lia.domide@codemart.ro',
            subject: "Jenkins Pipeline ${currentBuild.fullDisplayName} changed status",
            body: """
                Result: ${currentBuild.result}
                Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'
                Check console output at ${env.BUILD_URL}"""
        }
    }
}